#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.15
# from Racc grammer file "".
#

require 'racc/parser.rb'

require "minijava/lexer"
require "minijava/syntax"
require "active_support/core_ext/module/delegation"

module MiniJava
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 119)
delegate :next_token, :line, :column, to: :@lexer

def self.program_from(source)
  new(source).program
end

def initialize(source)
  @lexer   = MiniJava::Lexer.new(source)
  @yydebug = !ENV["DEBUG"].nil?
end

def on_error(*)
  $stderr.puts "Parse error at line #{line}, column #{column}"
end

alias_method :program, :do_parse
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    63,    71,    39,    36,   139,    11,    70,    29,    30,    29,
    30,    63,    71,     3,    58,   -23,   144,    70,    10,    37,
     7,   146,     7,    29,    30,    58,    59,    79,    60,    61,
   120,    66,    67,    68,    69,    73,     7,    59,     7,    60,
    61,   121,    66,    67,    68,    69,    73,     7,    63,    71,
    94,   -23,   117,   123,    70,    17,   124,     7,     7,    63,
    71,    18,    58,     7,    93,    70,    92,    19,    91,    89,
    90,    88,    87,    58,    59,    20,    60,    61,     7,    66,
    67,    68,    69,    73,     7,    59,   145,    60,    61,    24,
    66,    67,    68,    69,    73,     7,    63,    71,    29,    30,
    25,    32,    70,    29,    30,    33,    40,    63,    71,    42,
    58,     7,    93,    70,    92,    93,     7,    92,    93,    91,
    92,    58,    59,    43,    60,    61,    44,    66,    67,    68,
    69,    73,     7,    59,    47,    60,    61,    46,    66,    67,
    68,    69,    73,     7,    63,    71,    48,    49,    50,     7,
    70,    71,    54,    16,    74,    75,    70,    71,    58,    14,
    78,     7,    70,    71,    12,    82,    83,    84,    70,    71,
    59,    85,    60,    61,    70,    66,    67,    68,    69,    73,
     7,    66,    67,    68,    69,    73,     7,    66,    67,    68,
    69,    73,     7,    66,    67,    68,    69,    73,     7,    66,
    67,    68,    69,    73,     7,    71,    86,   132,   104,    79,
    70,    71,     4,   107,   135,     8,    70,    71,     7,   nil,
   nil,   nil,    70,    71,   nil,   nil,   nil,   nil,    70,    71,
   nil,   nil,   nil,   nil,    70,    66,    67,    68,    69,    73,
     7,    66,    67,    68,    69,    73,     7,    66,    67,    68,
    69,    73,     7,    66,    67,    68,    69,    73,     7,    66,
    67,    68,    69,    73,     7,    71,   nil,   nil,   nil,   nil,
    70,    71,   nil,   nil,   nil,   nil,    70,    71,   nil,   nil,
   nil,   nil,    70,    71,   nil,   nil,   nil,   nil,    70,    71,
   nil,   nil,   nil,   nil,    70,    66,    67,    68,    69,    73,
     7,    66,    67,    68,    69,    73,     7,    66,    67,    68,
    69,    73,     7,    66,    67,    68,    69,    73,     7,    66,
    67,    68,    69,    73,     7,    71,   nil,   nil,   nil,   nil,
    70,    71,   nil,   nil,   nil,   nil,    70,    71,   128,    93,
   nil,    92,    70,    91,    89,    90,    88,    87,    93,   nil,
    92,   nil,    91,    89,    90,    66,    67,    68,    69,    73,
     7,    66,    67,    68,    69,    73,     7,    66,    67,    68,
    69,    73,     7,    93,   nil,    92,   nil,    91,    89,    90,
    88,    87,    93,   nil,    92,   nil,    91,    89,    90,    88,
    87,   127,    93,   nil,    92,   nil,    91,    93,   nil,    92,
   126,    91,    89,    90,    88,    87,   nil,   nil,   nil,   nil,
   nil,   122,    93,   nil,    92,   131,    91,    89,    90,    88,
    87,   129,    93,   nil,    92,   nil,    91,    89,    90,    88,
    87,   130,    93,   nil,    92,   nil,    91,    89,    90,    88,
    87,    93,   143,    92,   nil,    91,    89,    90,    88,    87,
    93,   133,    92,   nil,    91,    89,    90,    88,    87,    93,
   nil,    92,   nil,    91,    89,    90,    88,    87,    93,   nil,
    92,   nil,    91,    89,    90,    88 ]

racc_action_check = [
    51,    51,    28,    26,   130,     5,    51,    22,    22,    75,
    75,   144,   144,     0,    51,    56,   137,   144,     5,    26,
    22,   141,    75,    51,    51,   144,    51,    56,    51,    51,
    94,    51,    51,    51,    51,    51,    51,   144,    28,   144,
   144,    95,   144,   144,   144,   144,   144,   144,   129,   129,
    69,    56,    92,   100,   129,    13,   102,   103,    92,   128,
   128,    13,   129,    69,   140,   128,   140,    15,   140,   140,
   140,   140,   140,   128,   129,    16,   129,   129,    18,   129,
   129,   129,   129,   129,   129,   128,   140,   128,   128,    20,
   128,   128,   128,   128,   128,   128,    58,    58,    37,    37,
    21,    23,    58,   124,   124,    24,    29,    57,    57,    33,
    58,    37,    96,    57,    96,   115,   124,   115,   116,   115,
   116,    57,    58,    35,    58,    58,    36,    58,    58,    58,
    58,    58,    58,    57,    39,    57,    57,    38,    57,    57,
    57,    57,    57,    57,    54,    54,    40,    41,    42,    45,
    54,   145,    50,    12,    52,    53,   145,    70,    54,    11,
    55,    10,    70,    71,     6,    59,    60,    61,    71,    78,
    54,    62,    54,    54,    78,    54,    54,    54,    54,    54,
    54,   145,   145,   145,   145,   145,   145,    70,    70,    70,
    70,    70,    70,    71,    71,    71,    71,    71,    71,    78,
    78,    78,    78,    78,    78,    79,    63,   118,    76,    77,
    79,    82,     1,    81,   121,     4,    82,    83,     3,   nil,
   nil,   nil,    83,    84,   nil,   nil,   nil,   nil,    84,    85,
   nil,   nil,   nil,   nil,    85,    79,    79,    79,    79,    79,
    79,    82,    82,    82,    82,    82,    82,    83,    83,    83,
    83,    83,    83,    84,    84,    84,    84,    84,    84,    85,
    85,    85,    85,    85,    85,    87,   nil,   nil,   nil,   nil,
    87,    88,   nil,   nil,   nil,   nil,    88,    89,   nil,   nil,
   nil,   nil,    89,    90,   nil,   nil,   nil,   nil,    90,    91,
   nil,   nil,   nil,   nil,    91,    87,    87,    87,    87,    87,
    87,    88,    88,    88,    88,    88,    88,    89,    89,    89,
    89,    89,    89,    90,    90,    90,    90,    90,    90,    91,
    91,    91,    91,    91,    91,    93,   nil,   nil,   nil,   nil,
    93,   120,   nil,   nil,   nil,   nil,   120,   132,   108,   108,
   nil,   108,   132,   108,   108,   108,   108,   108,   113,   nil,
   113,   nil,   113,   113,   113,    93,    93,    93,    93,    93,
    93,   120,   120,   120,   120,   120,   120,   132,   132,   132,
   132,   132,   132,   106,   nil,   106,   nil,   106,   106,   106,
   106,   106,   105,   nil,   105,   nil,   105,   105,   105,   105,
   105,   106,   114,   nil,   114,   nil,   114,   111,   nil,   111,
   105,   111,   111,   111,   111,   111,   nil,   nil,   nil,   nil,
   nil,    99,    99,   nil,    99,   111,    99,    99,    99,    99,
    99,   109,   109,   nil,   109,   nil,   109,   109,   109,   109,
   109,   110,   110,   nil,   110,   nil,   110,   110,   110,   110,
   110,   134,   134,   134,   nil,   134,   134,   134,   134,   134,
   119,   119,   119,   nil,   119,   119,   119,   119,   119,    64,
   nil,    64,   nil,    64,    64,    64,    64,    64,   112,   nil,
   112,   nil,   112,   112,   112,   112 ]

racc_action_pointer = [
    -1,   212,   nil,   181,   215,     4,   149,   nil,   nil,   nil,
   124,   143,   136,    40,   nil,    51,    57,   nil,    41,   nil,
    70,    84,   -17,    86,    85,   nil,     2,   nil,     1,   102,
   nil,   nil,   nil,   107,   nil,   108,   110,    74,   115,   112,
   141,   131,   145,   nil,   nil,   112,   nil,   nil,   nil,   nil,
   137,    -1,   138,   153,   143,   137,    14,   106,    95,   163,
   164,   165,   158,   184,   455,   nil,   nil,   nil,   nil,    26,
   155,   161,   nil,   nil,   nil,   -15,   192,   196,   167,   203,
   nil,   197,   209,   215,   221,   227,   nil,   263,   269,   275,
   281,   287,    21,   323,    26,    39,   108,   nil,   nil,   408,
    50,   nil,    30,    20,   nil,   378,   369,   nil,   335,   418,
   428,   393,   464,   344,   388,   111,   114,   nil,   205,   446,
   329,   211,   nil,   nil,    79,   nil,   nil,   nil,    58,    47,
   -18,   nil,   335,   nil,   437,   nil,   nil,   -12,   nil,   nil,
    60,    18,   nil,   nil,    10,   149,   nil,   nil,   nil ]

racc_action_default = [
   -63,   -63,    -4,   -63,   -63,    -1,   -63,   -62,   149,    -5,
   -63,   -63,   -63,   -63,    -8,   -63,   -63,   -10,   -63,    -2,
   -63,   -63,   -14,   -63,   -63,    -6,    -9,   -11,   -63,   -22,
   -21,   -23,   -10,   -63,   -15,   -63,   -63,   -63,   -63,   -63,
   -63,   -63,   -63,   -10,   -17,   -63,   -12,   -13,   -20,    -7,
   -63,   -29,   -63,   -63,   -63,   -63,   -49,   -29,   -29,   -63,
   -63,   -63,   -43,   -63,   -63,   -46,   -47,   -48,   -50,   -63,
   -63,   -63,   -60,   -61,   -16,   -24,   -63,   -49,   -63,   -63,
   -30,   -63,   -63,   -63,   -63,   -63,   -37,   -63,   -63,   -63,
   -63,   -63,   -63,   -63,   -63,   -63,   -53,   -43,   -49,   -63,
   -63,   -25,   -26,   -63,    -3,   -63,   -63,   -31,   -63,   -63,
   -63,   -63,   -38,   -39,   -40,   -41,   -42,   -44,   -63,   -63,
   -63,   -63,   -54,   -18,   -63,   -28,   -19,   -35,   -63,   -63,
   -63,   -36,   -56,   -55,   -63,   -52,   -27,   -63,   -33,   -34,
   -58,   -63,   -57,   -51,   -63,   -63,   -45,   -32,   -59 ]

racc_goto_table = [
     6,    76,    62,    45,   142,    62,    21,    13,    62,    62,
    26,   101,     9,    34,    35,    23,    55,   148,    52,    31,
   100,    41,    80,    81,    15,    38,     5,     2,   141,    51,
     1,   nil,   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,
   nil,   103,    53,   nil,    96,    99,   nil,   nil,    56,   nil,
   nil,    77,   105,   106,    77,    77,   108,   109,   110,   111,
   136,   112,   113,   114,   115,   116,    95,   119,   nil,   nil,
   nil,   nil,    31,   nil,   nil,   137,   138,   nil,   nil,    62,
    62,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   118,
   103,   147,   nil,   nil,   134,    62,   nil,   nil,   nil,   nil,
   125,   nil,   nil,   nil,   nil,   nil,   140,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   140,
   nil,    31,   nil,   nil,   nil,    77,    77,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    77 ]

racc_goto_check = [
     4,     6,    21,    12,    24,    21,     8,     4,    21,    21,
    10,    19,     7,    13,    14,     4,    17,    24,    15,     4,
    16,     8,    17,    17,     5,     4,     3,     2,    22,     9,
     1,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,    12,     4,   nil,    18,    18,   nil,   nil,     4,   nil,
   nil,     4,    18,    18,     4,     4,    18,    18,    18,    18,
    19,    18,    18,    18,    18,    18,     4,    18,   nil,   nil,
   nil,   nil,     4,   nil,   nil,     6,     6,   nil,   nil,    21,
    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,
    12,     6,   nil,   nil,    18,    21,   nil,   nil,   nil,   nil,
     4,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,
   nil,     4,   nil,   nil,   nil,     4,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4 ]

racc_goto_pointer = [
   nil,    30,    27,    24,    -3,    12,   -53,     7,   -11,   -14,
   -12,   nil,   -34,   -13,   -12,   -25,   -55,   -35,   -26,   -64,
   nil,   -49,  -104,   nil,  -128,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    98,   nil,    57,   nil,   nil,    22,
   nil,    27,    28,   nil,   nil,   nil,   nil,   nil,    64,   nil,
   102,    97,   nil,    65,   nil,    72 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 39, :_reduce_1,
  5, 40, :_reduce_2,
  9, 43, :_reduce_3,
  0, 41, :_reduce_4,
  2, 41, :_reduce_5,
  5, 45, :_reduce_6,
  7, 45, :_reduce_7,
  2, 45, :_reduce_8,
  2, 46, :_reduce_9,
  0, 47, :_reduce_10,
  2, 47, :_reduce_11,
  3, 49, :_reduce_12,
  3, 49, :_reduce_13,
  0, 48, :_reduce_14,
  2, 48, :_reduce_15,
  4, 51, :_reduce_16,
  2, 51, :_reduce_17,
  6, 52, :_reduce_18,
  5, 53, :_reduce_19,
  3, 50, :_reduce_20,
  1, 50, :_reduce_21,
  1, 50, :_reduce_22,
  1, 50, :_reduce_23,
  0, 54, :_reduce_24,
  1, 54, :_reduce_25,
  1, 57, :_reduce_26,
  3, 57, :_reduce_27,
  2, 58, :_reduce_28,
  0, 55, :_reduce_29,
  2, 55, :_reduce_30,
  3, 44, :_reduce_31,
  7, 44, :_reduce_32,
  5, 44, :_reduce_33,
  5, 44, :_reduce_34,
  4, 44, :_reduce_35,
  4, 44, :_reduce_36,
  2, 44, :_reduce_37,
  3, 56, :_reduce_38,
  3, 56, :_reduce_39,
  3, 56, :_reduce_40,
  3, 56, :_reduce_41,
  3, 56, :_reduce_42,
  1, 56, :_reduce_43,
  3, 56, :_reduce_44,
  6, 56, :_reduce_45,
  1, 56, :_reduce_46,
  1, 56, :_reduce_47,
  1, 56, :_reduce_48,
  1, 56, :_reduce_49,
  1, 56, :_reduce_50,
  5, 56, :_reduce_51,
  4, 56, :_reduce_52,
  2, 56, :_reduce_53,
  3, 56, :_reduce_54,
  4, 59, :_reduce_55,
  0, 60, :_reduce_56,
  1, 60, :_reduce_57,
  1, 62, :_reduce_58,
  3, 62, :_reduce_59,
  1, 61, :_reduce_60,
  1, 63, :_reduce_61,
  1, 42, :_reduce_62 ]

racc_reduce_n = 63

racc_shift_n = 149

racc_token_table = {
  false => 0,
  :error => 1,
  :LPAREN => 2,
  :RPAREN => 3,
  :LBRACKET => 4,
  :RBRACKET => 5,
  :DOT => 6,
  :NOT => 7,
  :STAR => 8,
  :PLUS => 9,
  :MINUS => 10,
  :LT => 11,
  :AND => 12,
  :EQUAL => 13,
  :CLASS => 14,
  :LBRACE => 15,
  :RBRACE => 16,
  :PUBLIC => 17,
  :STATIC => 18,
  :VOID => 19,
  :MAIN => 20,
  :EXTENDS => 21,
  :SEMICOLON => 22,
  :RETURN => 23,
  :INT => 24,
  :BOOLEAN => 25,
  :COMMA => 26,
  :IF => 27,
  :ELSE => 28,
  :WHILE => 29,
  :PRINTLN => 30,
  :LENGTH => 31,
  :TRUE => 32,
  :FALSE => 33,
  :THIS => 34,
  :NEW => 35,
  :DECIMAL_NUMERAL => 36,
  :IDENTIFIER => 37 }

racc_nt_base = 38

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "LPAREN",
  "RPAREN",
  "LBRACKET",
  "RBRACKET",
  "DOT",
  "NOT",
  "STAR",
  "PLUS",
  "MINUS",
  "LT",
  "AND",
  "EQUAL",
  "CLASS",
  "LBRACE",
  "RBRACE",
  "PUBLIC",
  "STATIC",
  "VOID",
  "MAIN",
  "EXTENDS",
  "SEMICOLON",
  "RETURN",
  "INT",
  "BOOLEAN",
  "COMMA",
  "IF",
  "ELSE",
  "WHILE",
  "PRINTLN",
  "LENGTH",
  "TRUE",
  "FALSE",
  "THIS",
  "NEW",
  "DECIMAL_NUMERAL",
  "IDENTIFIER",
  "$start",
  "Program",
  "MainClassDeclaration",
  "ClassDeclarations",
  "Identifier",
  "MainMethodDeclaration",
  "Statement",
  "ClassDeclaration",
  "ClassBody",
  "VariableDeclarations",
  "MethodDeclarations",
  "VariableDeclaration",
  "Type",
  "MethodDeclaration",
  "MethodSignature",
  "MethodBody",
  "FormalParameters",
  "Statements",
  "Expression",
  "OneOrMoreFormalParameters",
  "FormalParameter",
  "ArraySubscript",
  "ActualParameters",
  "IntegerLiteral",
  "OneOrMoreActualParameters",
  "DecimalNumeral" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 17)
  def _reduce_1(val, _values)
     MiniJava::Syntax::Program.new(val[0], val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 20)
  def _reduce_2(val, _values)
     MiniJava::Syntax::MainClassDeclaration.new(val[1], val[3]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_3(val, _values)
     MiniJava::Syntax::MainMethodDeclaration.new(val[7]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_4(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_5(val, _values)
     val[0].append(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_6(val, _values)
     MiniJava::Syntax::ClassDeclaration.new(val[1], *val[3]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_7(val, _values)
     MiniJava::Syntax::SubclassDeclaration.new(val[1], val[3], *val[5]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_8(val, _values)
     MiniJava::Syntax::InvalidClassDeclaration.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_9(val, _values)
     [ val[0], val[1] ] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_10(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_11(val, _values)
     val[0].append(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_12(val, _values)
     MiniJava::Syntax::VariableDeclaration.new(val[0], val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_13(val, _values)
     MiniJava::Syntax::InvalidVariableDeclaration.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_14(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_15(val, _values)
     val[0].append(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_16(val, _values)
     MiniJava::Syntax::MethodDeclaration.new(*val[0], *val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_17(val, _values)
     MiniJava::Syntax::InvalidMethodDeclaration.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_18(val, _values)
     [ val[1], val[2], val[4] ] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_19(val, _values)
     [ val[0], val[1], val[3] ] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_20(val, _values)
     MiniJava::Syntax::ArrayType.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_21(val, _values)
     MiniJava::Syntax::BooleanType.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_22(val, _values)
     MiniJava::Syntax::IntegerType.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_23(val, _values)
     MiniJava::Syntax::ObjectType.new(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_24(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_25(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_26(val, _values)
     [ val[0] ] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_27(val, _values)
     val[2].prepend(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_28(val, _values)
     MiniJava::Syntax::FormalParameter.new(val[0], val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_29(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_30(val, _values)
     val[1].prepend(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_31(val, _values)
     MiniJava::Syntax::Block.new(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_32(val, _values)
     MiniJava::Syntax::IfStatement.new(val[2], val[4], val[6]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_33(val, _values)
     MiniJava::Syntax::WhileStatement.new(val[2], val[4]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_34(val, _values)
     MiniJava::Syntax::PrintStatement.new(val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_35(val, _values)
     MiniJava::Syntax::SimpleAssignment.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_36(val, _values)
     MiniJava::Syntax::ArrayElementAssignment.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_37(val, _values)
     MiniJava::Syntax::InvalidStatement.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_38(val, _values)
     MiniJava::Syntax::And.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_39(val, _values)
     MiniJava::Syntax::LessThan.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_40(val, _values)
     MiniJava::Syntax::Plus.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_41(val, _values)
     MiniJava::Syntax::Minus.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_42(val, _values)
     MiniJava::Syntax::Times.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_43(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_44(val, _values)
     MiniJava::Syntax::ArrayLength.new(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_45(val, _values)
     MiniJava::Syntax::Call.new(val[0], val[2], val[4]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_46(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_47(val, _values)
     MiniJava::Syntax::TrueLiteral.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_48(val, _values)
     MiniJava::Syntax::FalseLiteral.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_49(val, _values)
     MiniJava::Syntax::Access.new(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_50(val, _values)
     MiniJava::Syntax::This.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_51(val, _values)
     MiniJava::Syntax::NewArray.new(val[3]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 94)
  def _reduce_52(val, _values)
     MiniJava::Syntax::NewObject.new(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_53(val, _values)
     MiniJava::Syntax::Not.new(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_54(val, _values)
     val[1] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_55(val, _values)
     MiniJava::Syntax::ArraySubscript.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_56(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_57(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_58(val, _values)
     [ val[0] ] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_59(val, _values)
     val[2].prepend(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_60(val, _values)
     MiniJava::Syntax::IntegerLiteral.new(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_61(val, _values)
     Integer(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_62(val, _values)
     MiniJava::Syntax::Identifier.new(val[0]) 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

  end   # class Parser
  end   # module MiniJava
