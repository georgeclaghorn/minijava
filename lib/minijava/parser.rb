#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.15
# from Racc grammer file "".
#

require 'racc/parser.rb'

require "minijava/lexer"
require "minijava/syntax"
require "active_support/core_ext/module/delegation"

module MiniJava
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 117)
delegate :next_token, :line, :column, to: :@lexer

def self.program_from(source)
  new(source).program
end

def initialize(source)
  @lexer   = MiniJava::Lexer.new(source)
  @yydebug = !ENV["DEBUG"].nil?
end

def on_error(*)
  $stderr.puts "Parse error at line #{line}, column #{column}"
end

alias_method :program, :do_parse
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    62,    36,   109,    39,    62,    98,    29,    30,    11,    62,
    99,    29,    30,    69,    58,     7,    69,    37,    58,     7,
    62,    10,    68,    58,     7,    68,    59,     7,    60,    61,
    59,     7,    60,    61,    58,    59,     7,    60,    61,     7,
     7,    62,    50,    29,    30,     7,    59,    62,    60,    61,
    29,    30,    62,    49,   125,    58,     7,    48,    47,    89,
     7,    58,    17,     7,    88,   147,    58,    59,    18,    60,
    61,    29,    30,    59,    89,    60,    61,     7,    59,    88,
    60,    61,    89,     7,     7,    46,    44,    88,     7,    83,
    84,    86,    87,    91,     7,    89,   107,   107,   108,   108,
    88,   106,   104,   105,    83,    84,    86,    87,    91,     7,
    43,    42,    83,    84,    86,    87,    91,     7,    89,   107,
   107,   108,   108,    88,   106,    83,    84,    86,    87,    91,
     7,    89,    40,    33,    32,    25,    88,    89,    24,   107,
     7,   108,    88,   106,   104,   105,   103,   102,    83,    84,
    86,    87,    91,     7,    89,   127,   107,   144,   108,    88,
   106,    83,    84,    86,    87,    91,     7,    83,    84,    86,
    87,    91,     7,    89,   128,   107,    20,   108,    88,   106,
   104,   105,   103,   102,    83,    84,    86,    87,    91,     7,
    89,   130,    19,   133,     3,    88,    89,   146,   135,    16,
   137,    88,    14,    83,    84,    86,    87,    91,     7,    89,
   116,   107,   139,   108,    88,   106,   104,   105,   103,   102,
    83,    84,    86,    87,    91,     7,    83,    84,    86,    87,
    91,     7,    89,     7,     4,    12,     8,    88,     7,    83,
    84,    86,    87,    91,     7,    89,    75,    74,    80,    73,
    88,    89,    72,   107,    67,   108,    88,   106,   104,   105,
   103,   102,    83,    84,    86,    87,    91,     7,    89,    94,
    64,   113,    63,    88,    54,    83,    84,    86,    87,    91,
     7,    83,    84,    86,    87,    91,     7,    89,   nil,   107,
   nil,   108,    88,   106,   104,   105,   103,   102,    83,    84,
    86,    87,    91,     7,    89,   117,   107,   101,   108,    88,
   106,   104,   105,   103,   102,   nil,   nil,    83,    84,    86,
    87,    91,     7,   129,   107,   nil,   108,   nil,   106,   104,
   105,   103,   102,   nil,    83,    84,    86,    87,    91,     7,
   115,   107,   nil,   108,   nil,   106,   104,   105,   103,   102,
   107,   134,   108,   nil,   106,   104,   105,   103,   102,   107,
   114,   108,   nil,   106,   104,   105,   103,   102,   107,   143,
   108,   nil,   106,   104,   105,   103,   102,   107,   nil,   108,
   nil,   106,   104,   105,   103 ]

racc_action_check = [
    57,    26,    87,    28,    58,    76,    37,    37,     5,   139,
    78,    99,    99,    56,    57,    87,    66,    26,    58,    37,
    51,     5,    56,   139,    99,    66,    57,    79,    57,    57,
    58,    45,    58,    58,    51,   139,    57,   139,   139,    28,
    58,    54,    42,    51,    51,   139,    51,   116,    51,    51,
    22,    22,   115,    41,   108,    54,    51,    40,    39,   106,
   108,   116,    13,    22,   106,   141,   115,    54,    13,    54,
    54,    64,    64,   116,   105,   116,   116,    54,   115,   105,
   115,   115,   104,   116,    64,    38,    36,   104,   115,   106,
   106,   106,   106,   106,   106,   103,   111,   120,   111,   120,
   103,   120,   120,   120,   105,   105,   105,   105,   105,   105,
    35,    33,   104,   104,   104,   104,   104,   104,    69,   123,
   121,   123,   121,    69,   121,   103,   103,   103,   103,   103,
   103,   102,    29,    24,    23,    21,   102,    72,    20,   138,
    18,   138,    72,   138,   138,   138,   138,   138,    69,    69,
    69,    69,    69,    69,    73,   109,   122,   138,   122,    73,
   122,   102,   102,   102,   102,   102,   102,    72,    72,    72,
    72,    72,    72,   146,   110,   140,    16,   140,   146,   140,
   140,   140,   140,   140,    73,    73,    73,    73,    73,    73,
    88,   114,    15,   117,     0,    88,    67,   140,   126,    12,
   128,    67,    11,   146,   146,   146,   146,   146,   146,    68,
    96,    96,   131,    96,    68,    96,    96,    96,    96,    96,
    88,    88,    88,    88,    88,    88,    67,    67,    67,    67,
    67,    67,   135,    10,     1,     6,     4,   135,     3,    68,
    68,    68,    68,    68,    68,   130,    62,    61,    65,    60,
   130,   127,    59,    92,    55,    92,   127,    92,    92,    92,
    92,    92,   135,   135,   135,   135,   135,   135,   107,    71,
    53,    92,    52,   107,    50,   130,   130,   130,   130,   130,
   130,   127,   127,   127,   127,   127,   127,    89,   nil,    81,
   nil,    81,    89,    81,    81,    81,    81,    81,   107,   107,
   107,   107,   107,   107,    74,    97,    97,    81,    97,    74,
    97,    97,    97,    97,    97,   nil,   nil,    89,    89,    89,
    89,    89,    89,   112,   112,   nil,   112,   nil,   112,   112,
   112,   112,   112,   nil,    74,    74,    74,    74,    74,    74,
    95,    95,   nil,    95,   nil,    95,    95,    95,    95,    95,
   124,   124,   124,   nil,   124,   124,   124,   124,   124,    93,
    93,    93,   nil,    93,    93,    93,    93,    93,   136,   136,
   136,   nil,   136,   136,   136,   136,   136,   119,   nil,   119,
   nil,   119,   119,   119,   119 ]

racc_action_pointer = [
   180,   234,   nil,   201,   236,     7,   220,   nil,   nil,   nil,
   196,   186,   182,    47,   nil,   176,   158,   nil,   103,   nil,
   119,   119,    26,   119,   113,   nil,     0,   nil,     2,   128,
   nil,   nil,   nil,   109,   nil,    95,    70,   -18,    63,    36,
    52,    37,    39,   nil,   nil,    -6,   nil,   nil,   nil,   nil,
   259,    19,   256,   268,    40,   231,     9,    -1,     3,   250,
   247,   245,   224,   nil,    47,   232,    12,   194,   207,   116,
   nil,   253,   135,   152,   302,   nil,     2,   nil,   -16,   -10,
   nil,   285,   nil,   nil,   nil,   nil,   nil,   -22,   188,   285,
   nil,   nil,   249,   355,   nil,   337,   207,   302,   nil,   -13,
   nil,   nil,   129,    93,    80,    72,    57,   266,    23,   151,
   172,    92,   320,   nil,   178,    51,    46,   171,   nil,   373,
    93,   116,   152,   115,   346,   nil,   196,   249,   197,   nil,
   243,   184,   nil,   nil,   nil,   230,   364,   nil,   135,     8,
   171,    62,   nil,   nil,   nil,   nil,   171,   nil,   nil ]

racc_action_default = [
   -62,   -62,    -4,   -62,   -62,    -1,   -62,   -61,   149,    -5,
   -62,   -62,   -62,   -62,    -8,   -62,   -62,   -10,   -62,    -2,
   -62,   -62,   -14,   -62,   -62,    -6,    -9,   -11,   -62,   -22,
   -21,   -23,   -10,   -62,   -15,   -62,   -62,   -62,   -62,   -62,
   -62,   -62,   -62,   -10,   -17,   -62,   -12,   -13,   -20,    -7,
   -62,   -29,   -62,   -62,   -62,   -62,   -23,   -29,   -29,   -62,
   -62,   -62,   -62,   -16,   -24,   -62,   -62,   -62,   -62,   -62,
   -30,   -62,   -62,   -62,   -62,   -37,   -62,   -25,   -26,   -62,
    -3,   -62,   -46,   -47,   -48,   -49,   -50,   -62,   -62,   -62,
   -59,   -60,   -62,   -62,   -31,   -62,   -62,   -62,   -18,   -62,
   -28,   -19,   -62,   -62,   -62,   -62,   -62,   -62,   -62,   -62,
   -62,   -53,   -62,   -35,   -62,   -62,   -62,   -62,   -27,   -38,
   -39,   -40,   -41,   -42,   -62,   -44,   -62,   -62,   -62,   -54,
   -62,   -62,   -33,   -34,   -43,   -55,   -62,   -52,   -62,   -62,
   -57,   -62,   -56,   -51,   -36,   -32,   -62,   -45,   -58 ]

racc_goto_table = [
     6,    65,    45,    21,    77,   142,    55,    13,    51,    26,
    15,    34,    70,    71,    35,    23,   148,    52,    41,    31,
    76,     5,     2,   141,     9,    38,     1,   nil,   nil,    79,
   nil,    81,    92,    93,    31,   nil,    95,    96,    97,   118,
   nil,   nil,    53,   nil,   nil,   nil,   nil,   nil,    56,   nil,
   nil,    66,   111,   112,    66,    66,   nil,   nil,   nil,   nil,
   nil,    31,   131,   132,    79,   nil,   119,   120,   121,   122,
   123,   124,   nil,   nil,   nil,   nil,   100,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   110,   nil,   145,   nil,   nil,   nil,
   nil,   136,   nil,   nil,   138,   nil,    31,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   126,   nil,   nil,   nil,   nil,
   nil,   nil,    66,    66,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    66 ]

racc_goto_check = [
     4,     6,    12,     8,    19,    23,    17,     4,     9,    10,
     5,    13,    17,    17,    14,     4,    23,    15,     8,     4,
    16,     3,     2,    21,     7,     4,     1,   nil,   nil,    12,
   nil,    18,    18,    18,     4,   nil,    18,    18,    18,    19,
   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,     4,    18,    18,     4,     4,   nil,   nil,   nil,   nil,
   nil,     4,     6,     6,    12,   nil,    18,    18,    18,    18,
    18,    18,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,     6,   nil,   nil,   nil,
   nil,    18,   nil,   nil,    18,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    26,    22,    19,    -3,    -2,   -53,    19,   -14,   -35,
   -13,   nil,   -35,   -15,   -12,   -26,   -44,   -45,   -36,   -60,
   nil,  -112,   nil,  -130,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    85,   nil,    57,   nil,   nil,    22,
   nil,    27,    28,   nil,   nil,   nil,   nil,   nil,   140,   nil,
    78,   nil,    82,   nil,    90 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 39, :_reduce_1,
  5, 40, :_reduce_2,
  9, 43, :_reduce_3,
  0, 41, :_reduce_4,
  2, 41, :_reduce_5,
  5, 45, :_reduce_6,
  7, 45, :_reduce_7,
  2, 45, :_reduce_8,
  2, 46, :_reduce_9,
  0, 47, :_reduce_10,
  2, 47, :_reduce_11,
  3, 49, :_reduce_12,
  3, 49, :_reduce_13,
  0, 48, :_reduce_14,
  2, 48, :_reduce_15,
  4, 51, :_reduce_16,
  2, 51, :_reduce_17,
  6, 52, :_reduce_18,
  5, 53, :_reduce_19,
  3, 50, :_reduce_20,
  1, 50, :_reduce_21,
  1, 50, :_reduce_22,
  1, 50, :_reduce_23,
  0, 54, :_reduce_24,
  1, 54, :_reduce_25,
  1, 57, :_reduce_26,
  3, 57, :_reduce_27,
  2, 58, :_reduce_28,
  0, 55, :_reduce_29,
  2, 55, :_reduce_30,
  3, 44, :_reduce_31,
  7, 44, :_reduce_32,
  5, 44, :_reduce_33,
  5, 44, :_reduce_34,
  4, 44, :_reduce_35,
  7, 44, :_reduce_36,
  2, 44, :_reduce_37,
  3, 56, :_reduce_38,
  3, 56, :_reduce_39,
  3, 56, :_reduce_40,
  3, 56, :_reduce_41,
  3, 56, :_reduce_42,
  4, 56, :_reduce_43,
  3, 56, :_reduce_44,
  6, 56, :_reduce_45,
  1, 56, :_reduce_46,
  1, 56, :_reduce_47,
  1, 56, :_reduce_48,
  1, 56, :_reduce_49,
  1, 56, :_reduce_50,
  5, 56, :_reduce_51,
  4, 56, :_reduce_52,
  2, 56, :_reduce_53,
  3, 56, :_reduce_54,
  0, 59, :_reduce_55,
  1, 59, :_reduce_56,
  1, 61, :_reduce_57,
  3, 61, :_reduce_58,
  1, 60, :_reduce_59,
  1, 62, :_reduce_60,
  1, 42, :_reduce_61 ]

racc_reduce_n = 62

racc_shift_n = 149

racc_token_table = {
  false => 0,
  :error => 1,
  :LPAREN => 2,
  :RPAREN => 3,
  :LBRACKET => 4,
  :RBRACKET => 5,
  :DOT => 6,
  :NOT => 7,
  :STAR => 8,
  :PLUS => 9,
  :MINUS => 10,
  :LT => 11,
  :AND => 12,
  :EQUAL => 13,
  :CLASS => 14,
  :LBRACE => 15,
  :RBRACE => 16,
  :PUBLIC => 17,
  :STATIC => 18,
  :VOID => 19,
  :MAIN => 20,
  :EXTENDS => 21,
  :SEMICOLON => 22,
  :RETURN => 23,
  :INT => 24,
  :BOOLEAN => 25,
  :COMMA => 26,
  :IF => 27,
  :ELSE => 28,
  :WHILE => 29,
  :PRINTLN => 30,
  :LENGTH => 31,
  :TRUE => 32,
  :FALSE => 33,
  :THIS => 34,
  :NEW => 35,
  :DECIMAL_NUMERAL => 36,
  :IDENTIFIER => 37 }

racc_nt_base = 38

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "LPAREN",
  "RPAREN",
  "LBRACKET",
  "RBRACKET",
  "DOT",
  "NOT",
  "STAR",
  "PLUS",
  "MINUS",
  "LT",
  "AND",
  "EQUAL",
  "CLASS",
  "LBRACE",
  "RBRACE",
  "PUBLIC",
  "STATIC",
  "VOID",
  "MAIN",
  "EXTENDS",
  "SEMICOLON",
  "RETURN",
  "INT",
  "BOOLEAN",
  "COMMA",
  "IF",
  "ELSE",
  "WHILE",
  "PRINTLN",
  "LENGTH",
  "TRUE",
  "FALSE",
  "THIS",
  "NEW",
  "DECIMAL_NUMERAL",
  "IDENTIFIER",
  "$start",
  "Program",
  "MainClassDeclaration",
  "ClassDeclarations",
  "Identifier",
  "MainMethodDeclaration",
  "Statement",
  "ClassDeclaration",
  "ClassBody",
  "VariableDeclarations",
  "MethodDeclarations",
  "VariableDeclaration",
  "Type",
  "MethodDeclaration",
  "MethodSignature",
  "MethodBody",
  "FormalParameters",
  "Statements",
  "Expression",
  "OneOrMoreFormalParameters",
  "FormalParameter",
  "ActualParameters",
  "IntegerLiteral",
  "OneOrMoreActualParameters",
  "DecimalNumeral" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 17)
  def _reduce_1(val, _values)
     MiniJava::Syntax::Program.new(val[0], val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 20)
  def _reduce_2(val, _values)
     MiniJava::Syntax::MainClassDeclaration.new(val[1], val[3]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_3(val, _values)
     MiniJava::Syntax::MainMethodDeclaration.new(val[7]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_4(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_5(val, _values)
     val[0].append(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_6(val, _values)
     MiniJava::Syntax::ClassDeclaration.new(val[1], *val[3]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_7(val, _values)
     MiniJava::Syntax::SubclassDeclaration.new(val[1], val[3], *val[5]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_8(val, _values)
     MiniJava::Syntax::InvalidClassDeclaration.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_9(val, _values)
     [ val[0], val[1] ] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_10(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_11(val, _values)
     val[0].append(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_12(val, _values)
     MiniJava::Syntax::VariableDeclaration.new(val[0], val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_13(val, _values)
     MiniJava::Syntax::InvalidVariableDeclaration.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_14(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_15(val, _values)
     val[0].append(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_16(val, _values)
     MiniJava::Syntax::MethodDeclaration.new(*val[0], *val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_17(val, _values)
     MiniJava::Syntax::InvalidMethodDeclaration.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_18(val, _values)
     [ val[1], val[2], val[4] ] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_19(val, _values)
     [ val[0], val[1], val[3] ] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_20(val, _values)
     MiniJava::Syntax::ArrayType.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_21(val, _values)
     MiniJava::Syntax::BooleanType.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_22(val, _values)
     MiniJava::Syntax::IntegerType.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_23(val, _values)
     MiniJava::Syntax::ObjectType.new(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_24(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_25(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_26(val, _values)
     [ val[0] ] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_27(val, _values)
     val[2].prepend(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_28(val, _values)
     MiniJava::Syntax::FormalParameter.new(val[0], val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_29(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_30(val, _values)
     val[1].prepend(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_31(val, _values)
     MiniJava::Syntax::Block.new(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_32(val, _values)
     MiniJava::Syntax::IfStatement.new(val[2], val[4], val[6]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_33(val, _values)
     MiniJava::Syntax::WhileStatement.new(val[2], val[4]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_34(val, _values)
     MiniJava::Syntax::PrintStatement.new(val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_35(val, _values)
     MiniJava::Syntax::VariableAssignment.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_36(val, _values)
     MiniJava::Syntax::ArrayElementAssignment.new(val[0], val[2], val[5]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_37(val, _values)
     MiniJava::Syntax::InvalidStatement.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_38(val, _values)
     MiniJava::Syntax::And.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_39(val, _values)
     MiniJava::Syntax::LessThan.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_40(val, _values)
     MiniJava::Syntax::Plus.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_41(val, _values)
     MiniJava::Syntax::Minus.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_42(val, _values)
     MiniJava::Syntax::Times.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_43(val, _values)
     MiniJava::Syntax::ArrayAccess.new(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_44(val, _values)
     MiniJava::Syntax::ArrayLength.new(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_45(val, _values)
     MiniJava::Syntax::MethodInvocation.new(val[0], val[2], val[4]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_46(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_47(val, _values)
     MiniJava::Syntax::TrueLiteral.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_48(val, _values)
     MiniJava::Syntax::FalseLiteral.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_49(val, _values)
     MiniJava::Syntax::VariableAccess.new(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_50(val, _values)
     MiniJava::Syntax::This.instance 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_51(val, _values)
     MiniJava::Syntax::NewArray.new(val[3]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 94)
  def _reduce_52(val, _values)
     MiniJava::Syntax::NewObject.new(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_53(val, _values)
     MiniJava::Syntax::Not.new(val[1]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_54(val, _values)
     val[1] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_55(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_56(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_57(val, _values)
     [ val[0] ] 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_58(val, _values)
     val[2].prepend(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_59(val, _values)
     MiniJava::Syntax::IntegerLiteral.new(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_60(val, _values)
     Integer(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_61(val, _values)
     MiniJava::Syntax::Identifier.new(val[0]) 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

  end   # class Parser
  end   # module MiniJava
